@using MudBlazor
@using System.Security.Principal

@attribute [Authorize]

@if(identity != null)
{

    <MudGrid>
        <MudItem xs="12">
            <MudPaper Class="pa-4 ma-2" Elevation="3">
                <MudText Typo="Typo.h6">User Information</MudText>
                <MudText Typo="Typo.body1">Name: @identity.Name</MudText>
                 <MudText Typo="Typo.body1">Autentication Type: @identity.AuthenticationType</MudText>
                <!-- Add more user information as needed -->
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudPaper Class="pa-4 ma-2" Elevation="3">
            <MudText Typo="Typo.h3">Groups</MudText>
            <MudList T="WindowsIdentity">
                @foreach (var group in identity.Groups)
                {
                    <MudListItem>@group.Value</MudListItem>
                }
            </MudList>
        </MudPaper>
    </MudItem>
    </MudGrid>
}
else
{
    <MudText Typo="Typo.h6">User Information</MudText>
    <MudText Typo="Typo.body1">No user information available</MudText>
}

@code {
    [Inject]
    AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    WindowsIdentity identity = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        @if (identity == null)
        {
            identity = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User.Identity as WindowsIdentity;
            StateHasChanged();
        }
        
        
    }
}
